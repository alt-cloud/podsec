#!/bin/sh

source podsec-functions
source podsec-get-platform

getPlatform

mes=$(isSigstoreServer)
if [ -n "$mes" ]
then
  echo $mes >&2
  echo "Загрузка образов невозможна"
  exit 1
fi

if ! id | grep -q podman_dev
then
  echo "Скрипт вызывается пользователем не входящим в группу podman_dev" >&2
  exit 1
fi

if [ $# -ne 4 -a $# -ne 3 ]
then
  echo -ne "Формат:\n\t$0 имя_архивного_файла архитектура EMail_подписанта [регистратор/тропа]\n"  >&2
  exit 1
fi

archive=$1
arch=$2
# regName=$(basename $3)
signBy="${3}"
if [ $# -eq 3 ]
then
  regName="registry.local/$U7S_PLATFORM"
  base="$U7S_PLATFORM/"
else
  dir=$(dirname $4)
  if [ $dir == '.' ]
  then
    echo "Отсутствует тропа после имени регистратора"
    echo -ne "Формат:\n\t$0 имя_архивного_файла архитектура EMail_подписанта [регистратор/тропа]\n"  >&2
    exit 1
  fi
  base="$(basename $4)"
  regName="$dir/$base"
  base+="/"
fi
baselen=${#base}

if [ ! -f $archive ]
then
  echo "Архив $archive отсутствует"
  echo -ne "Формат:\n\t$0 имя_архивного_файла архитектура EMail_подписанта [регистратор/тропа]\n"  >&2
  exit 1
fi

case $arch in
amd64 | arm64 | arm | ppc64le | 386) :;;
*)
  echo "Неизвестная архитектура $arch" >&2
  echo "Допустимые: amd64, arm64, arm, ppc64le, 386" >&2
  echo -ne "Формат:\n\t$0 имя_архивного_файла архитектура EMail_подписанта [регистратор/тропа]\n"  >&2
  exit 3
  ;;
esac

if [ -z "$regName" ]
then
  echo "Не указано имя регистратора" >&2
  echo -ne "Формат:\n\t$0 имя_архивного_файла архитектура EMail_подписанта [регистратор/тропа]\n"  >&2
  exit 4
fi

ifs=$IFS IFS=/
set -- $regName
IFS=.
set -- $1
IFS=$ifs
if [ $# -eq 1 ]
then
  echo "Имя регистратора должно содержать точку (.) в имени" >&2
  echo -ne "Формат:\n\t$0 имя_архивного_файла архитектура EMail_подписанта [регистратор/тропа]\n"  >&2
  exit 5
fi

TMPDIR=/var/tmp/ociDir.$$
mkdir -p $TMPDIR

if xz -d < $archive | tar xvCf $TMPDIR -
then
  :;
else
  echo "Неуспешное разворачивание архива" >&2
  exit 6
fi

archDir="$TMPDIR/$arch"
if [ ! -d $archDir ]
then
  echo "Неверный формат архива. Каталог архитектуры $arch отсутствует" >&2
  exit 7
fi

archIndexFile="$archDir/index.json"
if [ ! -f "$archIndexFile" ]
then
  echo "Неверный формат архива. Индексный файл архива $arch/index.json отсутствует" >&2
  exit 8
fi

image=$(jq '[.manifests[].annotations[]][0]' $archIndexFile)
image=${image:1:-1}
ifs=$IFS
IFS=/
set -- $image
IFS=$ifs
platform=$1
if [ "${U7S_PLATFORM:0:4}" = 'k8s-' ] # Convert k8s-c10fx to c10f platform
then
  PLATFORM=${U7S_PLATFORM:4:4}
else
  PLATFORM=${U7S_PLATFORM}
fi
if [ "$platform" != "$PLATFORM" ]
then
  echo "Текущая платформа $U7S_PLATFORM не совпадает c устанавливаемой $platform"
  echo "Продолжать (y/N)?"
  read answer
  if [ "$answer" != "y" ]
  then
    exit 1
  else
   base="$platform/"
   baselen=${#base}
  fi
fi

imagesList=$(jq '.manifests[].annotations[]' $archIndexFile)
ImageList=""
for image in $imagesList
do
  image=${image:1:-1}
  echo "Разворачивание образа $image в локальную систему"
  if [ "${image:0:$baselen}" == "$base" ]
  then
    image=${image:$baselen}
    ociImage="$base$image"
    Image="$regName/$image"
  else
    ociImage=$image
    Image="registry.local/$image"
  fi
  skopeo --override-arch $arch copy oci:$archDir:$ociImage containers-storage:$Image
  if [ $PLATFORM = 'c10f' ]
  then
    oldImage="$U7S_PLATFORM${image:4}"
    OldImage="registry.local/$oldImage"
    ImageList+=" $OldImage"
    podman tag  $Image $OldImage
  fi
  ImageList+=" $Image"
done

for Image in $ImageList
do
  echo "Подпись и передача образа $Image в регистратор"
  podman push --tls-verify=false --sign-by="$signBy" $Image
done

rm -rf $TMPDIR

