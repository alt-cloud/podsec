object HostGroup "podsec-nodes" {
  display_name = "Nodes with installed 'podsec' service"
}

template Host "podsec-host" {
  groups += [ "podsec-nodes" ]
}

apply Service "podsec-inotify-check-vuln" {
  import "generic-service"
  import "nagwad-service"
  display_name = "Vulnerability detected in a Docker images"
  vars.nagwad_filter = "podsec-inotify-check-vuln"
  assign where ("nagwad-nodes" in host.groups && "podsec-nodes" in host.groups)
}

apply Service "podsec-inotify-build-invulnerable-image" {
  import "generic-service"
  import "nagwad-service"
  display_name = "Vulnerability detected in a builded Docker image"
  vars.nagwad_filter = "podsec-inotify-build-invulnerable-image"
  assign where ("nagwad-nodes" in host.groups && "podsec-nodes" in host.groups)
}

apply Service "podsec-inotify-check-policy" {
  import "generic-service"
  import "nagwad-service"
  display_name = "Containers policy misconfiguration detected"
  vars.nagwad_filter = "podsec-inotify-check-policy"
  assign where ("nagwad-nodes" in host.groups && "podsec-nodes" in host.groups)
}

apply Service "podsec-inotify-check-images" {
  import "generic-service"
  import "nagwad-service"
  display_name = "Inconsistency of images with containers policy detected"
  vars.nagwad_filter = "podsec-inotify-check-images"
  assign where ("nagwad-nodes" in host.groups && "podsec-nodes" in host.groups)
}

apply Service "podsec-inotify-check-containers" {
  import "generic-service"
  import "nagwad-service"
  display_name = "Modified critical files detected in a running container"
  vars.nagwad_filter = "podsec-inotify-check-containers"
  assign where ("nagwad-nodes" in host.groups && "podsec-nodes" in host.groups)
}

apply Service "podsec-inotify-check-kubeapi" {
  import "generic-service"
  import "nagwad-service"
  display_name = "Alerts detected via Kubernetes API audit"
  vars.nagwad_filter = "podsec-inotify-check-kubeapi"
  assign where ("nagwad-nodes" in host.groups && "podsec-nodes" in host.groups)
}
