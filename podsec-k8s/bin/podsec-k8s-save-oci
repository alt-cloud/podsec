#!/bin/sh
# Скрипт производит архивацию образов kubernetes указанных версий
# в указанный первым параметром каталог
# Второй параметры задает через запятую архивируемые архитектуры.
# Если второй параметр имеет значение all архивируются все архитектуры: amd64 arm64 arm ppc64le 386
# Третий необязаьельный параметр определяет платформу - k8s-c10f1, k8s-p10. Если не указан, определяется по файлу /etc/os-release
# Скрипт производит загрузку kubernet-образов с регистратора k8s-c10f1 в containers-storage: системы
# с последующим помещением их в указанный первым параметром каталог в подкаталог с именем архитектуры ($ociDir/$arch)
# Для улучшения последующей компресии слои образа помещаются несжатыми (параметр --dest-oci-accept-uncompressed-layers)
# После окончания наполнения подкаталога архитектуры он архивируется, сжимается и помещается в файл $ociDir/$arch.tar.xz
#
# Так как скрипт производит загрузку образов различных архитектур
# последняя загруженная в containers-storage: архитектура может отличаться от текущей архитектуры процессора
# При необходимости нужно будет произвести перезагрузку образов для рабочей архитектуры процессора

if [ $# -le 1 ]
then
  echo "Не указан каталог архивирования образов"
  echo -ne "Формат:\n\t$0 <каталог_архивирования_образов> <архитектура>,<архитектура>,...|all\n"
  exit 1
fi

if [ $# -lt 2 ]
then
  echo "Не указан список архитектур"
  echo -ne "Формат:\n\t$0 <каталог_архивирования_образов> <архитектура>,<архитектура>,...|all\n"
  exit 1
fi

if [ -z "$U7S_KUBEVERSION" ]
then
  export U7S_KUBEVERSION="v1.26.11"
fi

ociDir=$1
archs=$2
shift;shift
source podsec-u7s-functions
if [ -n "$U7S_KUBEVERSION" ]
then
  ReplaceKubeCommand=$(replaceKubeCommand $U7S_KUBEVERSION)
  if ! su - -c "$ReplaceKubeCommand"
  then
    exit 1
  fi
fi

setRegistryName

if [ $# -gt 0 ]
then
  platform=$1
  shift
  if [ "$platform" != "$U7S_PLATFORM" ]
  then
    echo "Текущая платформа $U7S_PLATFORM не совпадает с загружаемой"
    echo "Продолжать? (Yes/no)"
    read answer
    if [ "$answer" == 'n' ]
    then
      exit 1
    fi
  fi
  export U7S_PLATFORM=$platform
fi

U7S_IMAGES+=" $@"
podsec-save-oci $ociDir $archs $U7S_IMAGES
