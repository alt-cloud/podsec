.\" generated with Ronn-NG/v0.9.1
.\" http://github.com/apjanke/ronn-ng/tree/0.9.1
.TH "PODSEC\-SAVE\-OCI" "1" "October 2024" ""
.SH "NAME"
\fBpodsec\-save\-oci\fR \- archiving images of different architectures to the directory specified by the first parameter, followed by compression and formation of an \fBxz\-oci\-archive\fR
.SH "SYNOPSIS"
\fBpodsec\-save\-oci image_archiving_directory architecture,architecture,\|\.\|\.\|\.|all image \|\.\|\.\|\.\fR
.SH "DESCRIPTION"
.SH "OPTIONS"
.IP "\[ci]" 4
The script archives images to the directory specified by the first parameter
.IP "\[ci]" 4
The second parameter specifies the architectures to be archived, separated by commas\. If the second parameter is all, all architectures are archived: \fBamd64\fR, \fBarm64\fR, \fBarm ppc64le\fR, \fB386\fR\.
.IP "\[ci]" 4
The script downloads the images specified by the 3rd and subsequent parameters from the registrar \fBregistry\.altlinux\.org\fR to the system\'s \fBcontainers\-storage:\fR and then places them in the directory specified by the first parameter in the subdirectory with the architecture name \fB$ociDir/$arch\fR\. To improve subsequent compression, image layers are placed uncompressed (parameter \fB\-\-dest\-oci\-accept\-uncompressed\-layers\fR)
.IP "\[ci]" 4
After the architecture subdirectory is filled, it is archived, compressed and placed in the file \fB$ociDir/$arch\.tar\.xz\fR
.IP "" 0
.SH "EXAMPLES"
\fBpodsec\-save\-oci /tmp/ociDir/ amd64,arm64 k8s\-c10f1/flannel:v0\.19\.2 k8s\-c10f1/flannel\-cni\-plugin:v1\.2\.0\fR
.SH "SECURITY CONSIDERATIONS"
.IP "\[ci]" 4
Since the script loads images of different architectures, the last one loaded into containers\-storage: architecture may differ from the current processor architecture\. If necessary, you will need to reload the images for the working processor architecture
.IP "" 0
.SH "AUTHOR"
Kostarev Alexey, Basealt LLC kaf@basealt\.ru
