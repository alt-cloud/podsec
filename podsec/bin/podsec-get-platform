
function getPlatform() {
  source /etc/os-release
  if [ -n "$ALT_BRANCH_ID" ]
  then
    if [ "$ALT_BRANCH_ID"  == 'sisyphus' ]
    then
      export U7S_PLATFORM="k8s-sisyphus";
    else
      export U7S_PLATFORM="k8s-$ALT_BRANCH_ID"
    fi
  else
    ifs=$IFS
    IFS=:
    set -- $CPE_NAME
    IFS=$ifs
    platform=$4
    version=$5
    IFS=.
    set -- $version
    IFS=$ifs
    version=$1
    case $platform in
      spserver) export U7S_PLATFORM="k8s-c${version}f1"; break;;
      sisyphus) export U7S_PLATFORM="k8s-sisyphus"; break;;
      *) export U7S_PLATFORM="k8s-p${version}"; break;;
    esac
  fi
  if [ $U7S_PLATFORM = 'k8s-c10f2' ]; then export U7S_PLATFORM='k8s-c10f1'; fi
  case $U7S_PLATFORM in
    test_k8s|k8s-c10f1|k8s-p10) break;;
    *) export U7S_PLATFORM="k8s-sisyphus";
  esac
}

if [ -z "$U7S_PLATFORM" ]
then
  getPlatform
fi

if [ -z "$U7S_KUBEVERSION" ]
then
  minorKubeVersion=$(getlastKubeAdmVersion)
  export U7S_KUBEVERSION=$(getKuberLastPatchVersion $minorKubeVersion)
  if [ -z "$U7S_KUBEVERSION" ]
  then
    echo "Репозиторий $U7S_REGISTRY платформы $U7S_PLATFORM не содержит образов версии $minorKubeVersion" >&2
    exit 1
  fi
  #case $U7S_PLATFORM in
  #  'k8s-sisyphus') export U7S_KUBEVERSION="v1.27.7";break;;
  #  'k8s-c10f1') export U7S_KUBEVERSION="v1.26.11";break;;
  #  *) export U7S_KUBEVERSION="v1.26.9";break;;
  #esac
fi

